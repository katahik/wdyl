<h1 id="heading">Click either you "like".</h1>

<div id="app">
  <div id="pictures">
    <div id="picture" v-for="item in items">
<!--      @click.preventとすることで画面遷移させない-->
<!--      clickしたときは、updataItemが発火-->
      <a @click.prevent="updateItem(item.id)">
        <!--      public/item_images の中に画像を格納しておく。-->
        <!--      DBには画像のデータの名前を入れておく-->
        <img :src="'/item_images/'+item.image" width="500px" height="500px"/>
        <div>
          {{item.name}}
        </div>
      </a>
    </div>
  </div>
</div>


<script>
    new Vue({
        el: "#app",
        data() {
            return {
                // v-forは要素があれば回す
                // itemsに何も入れないことでv-forが反応するのを防ぐ
                // このitemsに何か値をセットしてしまうと、setItemsでDBから正しい値を持ってくる前に、その値がv-forで使われる.
                // その結果v-forで回してもundefinedとなる
                items:[],
            }
        },
        mounted() {
            this.setItems();
        },
        methods: {
            // setCompetitionsメソッドを定義
            setItems: function () {
                // GETメソッドでapi/itemsとしたとき
                // JSON形式のapi/itemsを取得
                axios.get('/api/items')
                    // 成功したら、
                    .then(response => (
                        // Axiosで呼び出したAPIの情報をitemsに格納
                        this.items = response.data
                    ))
            },
            // itemをクリックしたとき、そのクリックしたほうのitemのidが渡って来る
            updateItem: function(item_id){
                // PUTメソッドでapi/items/item_idとする
                axios.put('api/items/'+item_id)
                    // 上が成功したら
                .then(response => (
                    // Axiosで呼び出したAPIの情報をitemsに格納
                    this.items = response.data
                ))
            }
        }
    });
</script>
